{"version":3,"sources":["Assets-2/day.svg","Assets-2/snowy-6.svg","Assets-2/rainy-6.svg","Assets-2/thunder.svg","Assets-2/cloudy-day-3.svg","Assets/cloudy-day-3.svg","Assets/snowy-6.svg","Assets/rainy-6.svg","Assets/thunder.svg","Assets/night.svg","Assets/day.svg","App.js","index.js"],"names":["App","useState","query","setQuery","setSeconds","weather","setWeather","tempCurrent","setTempCurrent","forecastOne","setForecastOne","forecastTwo","setForecastTwo","forecastThree","setForecastThree","forecastFour","setForecastFour","forecastFive","setForecastFive","forecastSix","setForecastSix","forecastSeven","setForecastSeven","forecastEight","setForecastEight","forecastNine","setForecastNine","forecastTen","setForecastTen","forecastEleven","setForecastEleven","forecastTwelve","setForecastTwelve","forecastWeatherOne","setForecastWeatherOne","forecastWeatherTwo","setForecastWeatherTwo","forecastWeatherThree","setForecastWeatherThree","forecastWeatherFour","setForecastWeatherFour","forecastWeatherFive","setForecastWeatherFive","forecastWeatherSix","setForecastWeatherSix","forecastWeatherSeven","setForecastWeatherSeven","forecastWeatherEight","setForecastWeatherEight","forecastWeatherNine","setForecastWeatherNine","forecastWeatherTen","setForecastWeatherTen","forecastWeatherEleven","setForecastWeatherEleven","forecastWeatherTwelve","setForecastWeatherTwelve","pop","setPop","location","split","api_key","data_weather","hoursInData","currentTime","Date","toLocaleString","hour","hour12","minute","addTime","hours","newTime","setHours","getHours","Math","round","getMinutes","setMinutes","getCoordinates","a","api_geo","fetch","response_geo","json","data_geo","longitude","lon","latitude","lat","console","log","api_weather","response_weather","weatherIconCurrent","updateTempCurrent","updateForecastOne","updateForecastTwo","updateForecastThree","updateForecastFour","updateForecastFive","updateForecastSix","updateForecastSeven","updateForecastEight","updateForecastNine","updateForecastTen","updateForecastEleven","updateForecastTwelve","convertUnixTimestamp","timestamp","updatedTime","adjustHours","hoursInAdvance","hourly","dt","hoursAhead","testCondition","hourOf","temperature","temp","feels_like","condition","main","description","testTime","eightPM","sixsix","eighteight","compareTime","compareTime2","daily","Sunny2","Cloudy2","Snowy2","Rainy2","Thunder2","Night2","futureWeather","weatherUpdate","Sunny","Cloudy","Snowy","Rainy","Thunder","forecastUpdateOne","forecastUpdateTwo","forecastUpdateThree","forecastUpdateFour","forecastUpdateFive","forecastUpdateSix","forecastUpdateSeven","forecastUpdateEight","forecastUpdateNine","forecastUpdateTen","forecastUpdateEleven","forecastUpdateTwelve","e","key","useEffect","interval","setInterval","clearInterval","className","Container","Row","Col","type","placeholder","onKeyPress","onChange","target","value","toLocaleDateString","weekday","day","month","src","alt","fluid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3e1733b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/day.0ea6ff39.svg\";","export default __webpack_public_path__ + \"static/media/snowy-6.9c11ec22.svg\";","export default __webpack_public_path__ + \"static/media/rainy-6.5d11005d.svg\";","export default __webpack_public_path__ + \"static/media/thunder.3558c6fd.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-3.655e5204.svg\";","export default __webpack_public_path__ + \"static/media/cloudy-day-3.2164d3c4.svg\";","export default __webpack_public_path__ + \"static/media/snowy-6.dce3f5e7.svg\";","export default __webpack_public_path__ + \"static/media/rainy-6.130d6250.svg\";","export default __webpack_public_path__ + \"static/media/thunder.19ff3c30.svg\";","export default __webpack_public_path__ + \"static/media/night.6cf4adcd.svg\";","export default __webpack_public_path__ + \"static/media/day.c33ef664.svg\";","import React, { useState, useEffect } from \"react\";\nimport { Container, Col, Row } from \"react-bootstrap\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Sunny from \"./Assets-2/day.svg\";\nimport Snowy from \"./Assets-2/snowy-6.svg\";\nimport Rainy from \"./Assets-2/rainy-6.svg\";\nimport Thunder from \"./Assets-2/thunder.svg\";\nimport Cloudy from \"./Assets-2/cloudy-day-3.svg\";\nimport Cloudy2 from \"./Assets/cloudy-day-3.svg\";\nimport Snowy2 from \"./Assets/snowy-6.svg\";\nimport Rainy2 from \"./Assets/rainy-6.svg\";\nimport Thunder2 from \"./Assets/thunder.svg\";\nimport Night2 from \"./Assets/night.svg\";\nimport Sunny2 from \"./Assets/day.svg\";\n\nfunction App() {\n    const [query, setQuery] = useState(\"\");\n    const [seconds, setSeconds] = useState(\"\");\n    const [weather, setWeather] = useState(\"\");\n    const [tempCurrent, setTempCurrent] = useState(\"\");\n    const [forecastOne, setForecastOne] = useState(\"\");\n    const [forecastTwo, setForecastTwo] = useState(\"\");\n    const [forecastThree, setForecastThree] = useState(\"\");\n    const [forecastFour, setForecastFour] = useState(\"\");\n    const [forecastFive, setForecastFive] = useState(\"\");\n    const [forecastSix, setForecastSix] = useState(\"\");\n    const [forecastSeven, setForecastSeven] = useState(\"\");\n    const [forecastEight, setForecastEight] = useState(\"\");\n    const [forecastNine, setForecastNine] = useState(\"\");\n    const [forecastTen, setForecastTen] = useState(\"\");\n    const [forecastEleven, setForecastEleven] = useState(\"\");\n    const [forecastTwelve, setForecastTwelve] = useState(\"\");\n    const [forecastWeatherOne, setForecastWeatherOne] = useState(\"\");\n    const [forecastWeatherTwo, setForecastWeatherTwo] = useState(\"\");\n    const [forecastWeatherThree, setForecastWeatherThree] = useState(\"\");\n    const [forecastWeatherFour, setForecastWeatherFour] = useState(\"\");\n    const [forecastWeatherFive, setForecastWeatherFive] = useState(\"\");\n    const [forecastWeatherSix, setForecastWeatherSix] = useState(\"\");\n    const [forecastWeatherSeven, setForecastWeatherSeven] = useState(\"\");\n    const [forecastWeatherEight, setForecastWeatherEight] = useState(\"\");\n    const [forecastWeatherNine, setForecastWeatherNine] = useState(\"\");\n    const [forecastWeatherTen, setForecastWeatherTen] = useState(\"\");\n    const [forecastWeatherEleven, setForecastWeatherEleven] = useState(\"\");\n    const [forecastWeatherTwelve, setForecastWeatherTwelve] = useState(\"\");\n    const [pop, setPop] = useState(\"\");\n\n    const location = query.split(\" \");\n    const api_key = \"ca8ca3f1008af06a32458784ea09799b\";\n    let data_weather = \"\";\n    let hoursInData = \"\";\n    let adjustHoursTime = \"\";\n\n    function dateGrabber() {\n        let date = new Date();\n        let options = {\n            weekday: \"short\",\n            day: \"numeric\",\n            month: \"short\",\n        };\n\n        return date.toLocaleDateString(\"en-US\", options);\n    }\n\n    function currentTime() {\n        let time = new Date();\n        let options = {\n            hour: \"numeric\",\n            hour12: true,\n            minute: \"numeric\",\n        };\n        return time.toLocaleString(\"en-Us\", options);\n    }\n\n    //Updates time every 1000ms\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setSeconds(currentTime());\n        }, 1000);\n        return () => clearInterval(interval);\n    }, []);\n\n    function addTime(hours) {\n        let newTime = new Date();\n        newTime.setHours(\n            newTime.getHours() + hours + Math.round(newTime.getMinutes() / 60)\n        );\n        newTime.setMinutes(0, 0, 0); // Resets also seconds and milliseconds\n        let options = {\n            hour: \"numeric\",\n            hour12: true,\n            minute: \"numeric\",\n        };\n        return newTime.toLocaleString(\"en-Us\", options);\n    }\n\n    async function getCoordinates() {\n        // Geocode location\n        const api_geo = `https://api.openweathermap.org/geo/1.0/direct?q=${location[0]},${location[1]},${location[2]}&appid=${api_key}`;\n        const response_geo = await fetch(api_geo);\n        const data_geo = await response_geo.json();\n        let longitude = data_geo[0].lon;\n        let latitude = data_geo[0].lat;\n        console.log(`Lat: ${latitude} Lon: ${longitude}`);\n\n        // Weather Gathering\n        const api_weather = `https://api.openweathermap.org/data/2.5/onecall?lat=${latitude}&lon=${longitude}&exclude=minutely,alerts&units=imperial&appid=${api_key}`;\n        const response_weather = await fetch(api_weather);\n        data_weather = await response_weather.json();\n        console.log(data_weather);\n        weatherIconCurrent(0);\n        updateTempCurrent();\n        updateForecastOne();\n        updateForecastTwo();\n        updateForecastThree();\n        updateForecastFour();\n        updateForecastFive();\n        updateForecastSix();\n        updateForecastSeven();\n        updateForecastEight();\n        updateForecastNine();\n        updateForecastTen();\n        updateForecastEleven();\n        updateForecastTwelve();\n\n        return data_weather;\n    }\n\n    // Update Unix time default to readable 24 hour time. Is called in adjustHours\n    function convertUnixTimestamp(timestamp) {\n        let updatedTime = new Date(timestamp * 1000);\n        let sameOptions = {\n            hour: \"numeric\",\n            hour12: true,\n            minute: \"numeric\",\n        };\n        updatedTime = updatedTime.toLocaleString(\"en-Us\", sameOptions);\n        return updatedTime;\n    }\n\n    // Get Hourly Info. Is called in weatherUpdate.\n    function adjustHours(hoursInAdvance) {\n        hoursInData = data_weather.hourly[hoursInAdvance];\n        adjustHoursTime = convertUnixTimestamp(hoursInData.dt);\n        return adjustHoursTime;\n    }\n\n    function weatherIconCurrent(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n\n        let testCondition = futureWeather.condition;\n        let testTime = data_weather.hourly[hoursAhead].dt;\n        let eightPM = new Date().setHours(17, 0, 0);\n        let sixAM = new Date().setHours(12, 20, 0);\n        let sixsix = convertUnixTimestamp(sixAM);\n        let eighteight = convertUnixTimestamp(eightPM);\n        let compareTime = testTime;\n        let compareTime2 = convertUnixTimestamp(compareTime);\n        setPop(data_weather.daily[0].pop);\n        console.log(`The probability of precipitation is ${pop} `);\n        console.log(`The test condition is ${testCondition}`);\n        console.log(`The current time is ${testTime}`);\n        console.log(`The morning compare time is ${sixsix}`);\n        console.log(`The night compare time is ${eighteight}`);\n        console.log(`The current test time is ${compareTime2}`);\n        switch (testCondition) {\n            default:\n                setWeather(`${Sunny2}`);\n                break;\n            case \"Clouds\":\n                setWeather(`${Cloudy2}`);\n                break;\n            case \"Clear\":\n                setWeather(`${Sunny2}`);\n                break;\n            case \"Snow\":\n                setWeather(`${Snowy2}`);\n                break;\n            case \"Rain\":\n                setWeather(`${Rainy2}`);\n                break;\n            case \"Thunderstorm\":\n                setWeather(`${Thunder2}`);\n                break;\n            case \"Clear\" && compareTime >= eighteight && compareTime <= sixsix:\n                console.log(\"It worked?\");\n                setWeather(`${Night2}`);\n                break;\n            case \"Clouds\" && compareTime >= eighteight && compareTime <= sixsix:\n                setWeather(`${Night2}`);\n                console.log(\"It worked ya ya?\");\n                break;\n        }\n    }\n\n    // Get Future Weather. Like with the state update\n    // functions theres likely an easier way to handle\n    // all of the updating states. But to be determined.\n    function weatherUpdate(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        setTempCurrent(`${Math.round(futureWeather.temperature)}°`);\n        console.log(futureWeather.condition);\n        return tempCurrent;\n    }\n\n    function forecastUpdateOne(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherOne(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherOne(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherOne(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherOne(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherOne(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherOne(`${Thunder}`);\n                break;\n        }\n        setForecastOne(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateTwo(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherTwo(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherTwo(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherTwo(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherTwo(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherTwo(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherTwo(`${Thunder}`);\n                break;\n        }\n        setForecastTwo(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateThree(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherThree(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherThree(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherThree(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherThree(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherThree(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherThree(`${Thunder}`);\n                break;\n        }\n        setForecastThree(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateFour(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherFour(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherFour(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherFour(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherFour(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherFour(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherFour(`${Thunder}`);\n                break;\n        }\n        setForecastFour(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateFive(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherFive(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherFive(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherFive(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherFive(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherFive(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherFive(`${Thunder}`);\n                break;\n        }\n        setForecastFive(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateSix(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherSix(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherSix(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherSix(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherSix(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherSix(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherSix(`${Thunder}`);\n                break;\n        }\n        setForecastSix(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateSeven(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherSeven(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherSeven(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherSeven(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherSeven(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherSeven(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherSeven(`${Thunder}`);\n                break;\n        }\n        setForecastSeven(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateEight(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherEight(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherEight(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherEight(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherEight(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherEight(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherEight(`${Thunder}`);\n                break;\n        }\n        setForecastEight(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateNine(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherNine(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherNine(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherNine(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherNine(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherNine(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherNine(`${Thunder}`);\n                break;\n        }\n        setForecastNine(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateTen(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherTen(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherTen(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherTen(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherTen(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherTen(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherTen(`${Thunder}`);\n                break;\n        }\n        setForecastTen(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateEleven(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherEleven(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherEleven(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherEleven(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherEleven(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherEleven(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherEleven(`${Thunder}`);\n                break;\n        }\n        setForecastEleven(`${Math.round(futureWeather.temperature)}°`);\n    }\n    function forecastUpdateTwelve(hoursAhead) {\n        let futureWeather = {\n            hourOf: adjustHours(hoursAhead),\n            temperature: data_weather.hourly[hoursAhead].temp,\n            feels_like: data_weather.hourly[hoursAhead].feels_like,\n            condition: data_weather.hourly[hoursAhead].weather[0].main,\n            description: data_weather.hourly[hoursAhead].weather[0].description,\n        };\n        let testCondition = futureWeather.condition;\n        switch (testCondition) {\n            default:\n                setForecastWeatherTwelve(`${Sunny}`);\n                break;\n            case \"Clouds\":\n                setForecastWeatherTwelve(`${Cloudy}`);\n                break;\n            case \"Clear\":\n                setForecastWeatherTwelve(`${Sunny}`);\n                break;\n            case \"Snow\":\n                setForecastWeatherTwelve(`${Snowy}`);\n                break;\n            case \"Rain\":\n                setForecastWeatherTwelve(`${Rainy}`);\n                break;\n            case \"Thunderstorm\":\n                setForecastWeatherTwelve(`${Thunder}`);\n                break;\n        }\n        setForecastTwelve(`${Math.round(futureWeather.temperature)}°`);\n    }\n\n    // Set of functions that update Temperatures.\n    // Probably a better solution than to write each state\n    // and function seperately but unaware of said solution\n    // as of now. Can always update later!\n    function updateTempCurrent() {\n        return weatherUpdate(0);\n    }\n\n    function updateForecastOne() {\n        return forecastUpdateOne(1);\n    }\n    function updateForecastTwo() {\n        return forecastUpdateTwo(2);\n    }\n    function updateForecastThree() {\n        return forecastUpdateThree(3);\n    }\n    function updateForecastFour() {\n        return forecastUpdateFour(4);\n    }\n    function updateForecastFive() {\n        return forecastUpdateFive(5);\n    }\n    function updateForecastSix() {\n        return forecastUpdateSix(6);\n    }\n    function updateForecastSeven() {\n        return forecastUpdateSeven(7);\n    }\n    function updateForecastEight() {\n        return forecastUpdateEight(8);\n    }\n    function updateForecastNine() {\n        return forecastUpdateNine(9);\n    }\n    function updateForecastTen() {\n        return forecastUpdateTen(10);\n    }\n    function updateForecastEleven() {\n        return forecastUpdateEleven(11);\n    }\n    function updateForecastTwelve() {\n        return forecastUpdateTwelve(12);\n    }\n\n    // Checks for 'Enter' key or 'Return' key on input. Runs getCoordinates\n    async function handleKeyPress(e) {\n        if (e.key === \"Enter\" || e.key === \"Return\") {\n            getCoordinates();\n        }\n    }\n\n    return (\n        <div className=\"App\">\n            {/* Header and Input  */}\n            <Container>\n                <Row className=\"row-flex-header\">\n                    <Col>\n                        <div>\n                            <input\n                                type=\"text\"\n                                className=\"search-box\"\n                                placeholder=\"Search\"\n                                onKeyPress={handleKeyPress}\n                                onChange={(e) => setQuery(e.target.value)}\n                                value={query}\n                            ></input>\n                        </div>\n                    </Col>\n                    <Col className=\"date\">{dateGrabber()}</Col>\n                </Row>\n            </Container>\n\n            {/* Forecast Preview For Today */}\n            <Container className=\"forecast-preview\">\n                <Row>\n                    <Col className=\"forecast-col\">\n                        <h3 className=\"citystate\">\n                            {location[0]} {location[1]}\n                        </h3>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"time\">\n                        <p>{currentTime()}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col className=\"forecast-col\">\n                        <h2 className=\"temp\">{tempCurrent}</h2>\n                    </Col>\n                </Row>\n            </Container>\n\n            {/* Weather Icon For Today */}\n            <Container>\n                <Container className=\"flex\">\n                    <div className=\"weather-box flex\">\n                        <Col className=\"flex\">\n                            <img\n                                className=\"weather\"\n                                key=\"primary\"\n                                src={weather}\n                                alt=\"\"\n                            />\n                        </Col>\n                    </div>\n                </Container>\n            </Container>\n\n            <Container fluid className=\"test\">\n                <Row>\n                <div className=\"future\">\n                    <div className=\"scroll-weather\" key=\"1\">\n                        <div className=\"weather-card flex\">\n                            {addTime(1)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherOne}\n                                alt=\"\"\n                            />\n                            <p>{forecastOne}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"2\">\n                            {addTime(2)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherTwo}\n                                alt=\"\"\n                            />\n                            <p>{forecastTwo}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"3\">\n                            {addTime(3)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherThree}\n                                alt=\"\"\n                            />\n                            <p>{forecastThree}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"4\">\n                            {addTime(4)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherFour}\n                                alt=\"\"\n                            />\n                            <p>{forecastFour}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"5\">\n                            {addTime(5)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherFive}\n                                alt=\"\"\n                            />\n                            <p>{forecastFive}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"6\">\n                            {addTime(6)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherSix}\n                                alt=\"\"\n                            />\n                            <p>{forecastSix}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"7\">\n                            {addTime(7)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherSeven}\n                                alt=\"\"\n                            />\n                            <p>{forecastSeven}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"8\">\n                            {addTime(8)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherEight}\n                                alt=\"\"\n                            />\n                            <p>{forecastEight}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"9\">\n                            {addTime(9)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherNine}\n                                alt=\"\"\n                            />\n                            <p>{forecastNine}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"10\">\n                            {addTime(10)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherTen}\n                                alt=\"\"\n                            />\n                            <p>{forecastTen}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"11\">\n                            {addTime(11)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherEleven}\n                                alt=\"\"\n                            />\n                            <p>{forecastEleven}</p>\n                        </div>\n                        <div className=\"weather-card\" key=\"12\">\n                            {addTime(12)}\n                            <img\n                                className=\"weather-card-weather\"\n                                src={forecastWeatherTwelve}\n                                alt=\"\"\n                            />\n                            <p>{forecastTwelve}</p>\n                        </div>\n                    </div>\n                </div>\n                </Row>\n            </Container>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}